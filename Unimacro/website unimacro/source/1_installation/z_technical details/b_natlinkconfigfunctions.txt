NatLink Configuration Functions

This module *natlinkconfigfunctions.py* is in the same directory as the configure GUI.  It contains the necessary functions for the configuration procedure. If run direct, use 
-IDLE (right click on the file, Edit with IDLE and press F5.  (at exit (q) some strange message may show up, just ignore)
-python (right click on the file, Open with, python)
-PythonWin (right click on the file, Edit with PythonWin; Press F5)

When the CLI starts, some checks are performed as to the current installation:
-It must find the coreDirectory to be in the same directorypart as the calling module. If this fails, something strange is happening.
-The path coreDirectory are compared with settings in registry of the PythonPath section. If something differs, you are asked to either
-(re)register NatLink.dll, and setting the correct paths in the registry. Quit the program and all python applications and restart NatSpeak.
-quit this program and rerun from the location you have your NatLink installation files.


 The current commands of the CLI are:

:CODE:
"""
[Status]
i       - info, print information about the NatLink status
I       - settings, print information about the natlinkstatus.ini settings
j       - print PythonPath variable

[NatLink]
e/E     - enable/disable NatLink

g/G     - enable/disable debug output, which is sent to the NatSpeak/Dragon log file
y/Y     - enable/disable debug callback output of natlinkmain 
x/X     - enable/disable debug load output     of natlinkmain

d/D     - set/clear DNSInstallDir, the directory where NatSpeak/Dragon is installed
c/C     - set/clear DNSINIDir, where NatSpeak/Dragon INI files are located

[Vocola]
v/V     - enable/disable Vocola by setting/clearing VocolaUserDir, the user
          directory for Vocola user files (~ or %HOME% allowed).

b/B     - enable/disable distinction between languages for Vocola user files
a/A     - enable/disable the possibility to use Unimacro actions in Vocola

[Unimacro]
n/N     - enable/disable Unimacro by setting/clearing UserDirectory, the
          directory where user NatLink grammar files are located (e.g.,
          ...\My Documents\NatLink)
f/F     - force Unimacro directory to be in the python path, even if
          the userDirectory is set to another path (-F: do not force this)
o/O     - set/clear UnimacroUserDir, where Unimacro user INI files are located
          (~ or %HOME% allowed)
p/P     - set/clear path for program that opens Unimacro INI files.
l       - copy header file Unimacro.vch into Vocola User Directory
m/M     - insert/remove an include line for Unimacro.vch in all Vocola
          command files

[Repair]
r/R     - register/unregister NatLink, the natlink.pyd (natlink.pyd) file
          (should not be needed)
z/Z     - silently enables NatLink and registers natlink.pyd / disables NatLink
          and unregisters natlink.pyd.
[AutoHotkey]
h/H     - set/clear the AutoHotkey exe directory.
k/K     - set/clear the User Directory for AutoHotkey scripts.
[Other]

u/usage - give this list
q       - quit

help <command>: give more explanation on <command>
::

 Using ~ or %USERNAME% etc.
Using these variables (*~* is equal to *%HOME%*), variable paths can be set for the various directories. This can only be done by using the CLI, or using the natlinkconfigfunctions in batch mode. *Not through the config GUI*.


 enable/disable NatLink
The commands *e* to enable and *E* to disable should be enough.

 enable/disable Vocola
Assume *_vocola_main.py* is in the baseDirectory (Macrosystem).

Vocola will be enabled when a valid VocolaUserDirectory is set with the *v* option.  

When this directory is cleared (*V*) Vocola will not load.

 enable/disable Unimacro
This is done by setting a userDirectory (option *u*)  (the path can be for example: _D:/NatLink/unimacro_ or _%PROGRAMFILES%/NatLink/unimacro_).  

Disable by clearing this directory (option *U*).

 Special Vocola option: use different languages
If enabled (*b*), Vocola will look into a subdirectory "xxx" of
VocolaUserDirectory IF the language code of 
the user speech profiles is different from "enx".

So for English users this option will have no effect.

If you call for a new command file, it looks first into the default directory, being one above.  So when the VocolaUserDirectory is  *~\Vocola* the English speech profiles will be in this directory , but
-Dutch will go in *~\Vocola\nld*, 
-French in *~\Vocola\fra*
-German  in *~\Vocola\deu*
-Italian in *~\Vocola\ita*

But as soon as you switch off this option (*B*) Vocola will only look again into the VocolaUserDirectory ( in our example: *~\Vocola*)


Note: *~* is a shorthand for your *PERSONAL* of *HOME* folder, by default pointing to your my documents folder. And *%PROGRAMFILES%* will locate your program files directory.

If your *HOME* or *PERSONAL* is not pointing to the correct folder, try to change the properties of your Documents folder in the Windows Explorer or change in the Environments Variables of the Windows Properties dialog.
-Note: more detailed instructions are welcome from somebody who hits upon this problem.

 Python versions
Natlink.pyd is still compiled for python 2.5, but only for Dragon up to version 11.5.

For both Dragon <= 11.5 and for Dragon 12 there are now natlink.pyd versions for python 2.6 and python 3.7.


 Older versions of Dragon NaturallySpeaking
Older versions of Dragon should be working with Python 2.5, 2.6 and 2.7.

If you have an older version of Dragon NaturallySpeaking, tried to configure the
-DNSInstallDir (option *d*) and 
-DNSIniDir (option *c*). 

 Path strategy
-The coreDirectory is inserted in the python path by defining them in the registry HKLM\SOFTWARE\Python\PythonCore\2.7\PythonPath\NatLink (HKLM stands for HKEY_LOCAL_MACHINE)
-The BaseDirectory, UserDirectory (for Unimacro or other user grammars) is set by natlinkmain.py, when NatSpeak starts.
-If the UserDirectory is NOT Unimacro, still Unimacro features can be used if the *-f* option is used. The Original Unimacro directory is added to the path, but only if the directory structure is as the installer does it (..\..\..\Unimacro relative to the Core directory)
-This *-f* trick can also be used for Vocola, using Unimacro Shorthand Commands, while Unimacro is not activated.

