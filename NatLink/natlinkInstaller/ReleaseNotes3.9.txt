Release NatLink/Vocola/Unimacro 3.9:


New in Vocola version 2.7.1 and 2.7and in the
! When VocolaTakesUnimacroActions option is enabled, the Unimacro.vch is copied
  into the VocolaUserDirectory if necessary

! Vocola can now be extended with extensions written in Python.

! Code generation for actions completely rewritten

! Runtime errors are now caught and displayed in a more user-friendly
  manner.  (No incomprehensible Python stack traces anymore.)

! New built-in EvalTemplate, which provides a more powerful version of Eval.

* Eval is now implemented via transformation to EvalTemplate.

! User functions are now implemented by unrolling; this allows passing
  instructions like SendDragonKeys(-), not just string-valued
  expressions, to user functions.

! How underscores in keystroke strings (e.g., "hello{enter_2}") are
  handled has changed:

  Now underscores are converted only just before a keystroke sending
  procedure like SendDragonKeys is called; moreover, only underscores
  that occur in the right place in a keystroke are converted.  E.g.,
  {__2} types __, not "  ".

  This is much more consistent than the previous behavior, which could
  convert underscores not part of a keystroke (e.g., {a}_{b} used to
  produce "a b", as well as failed to convert underscores that were part
  of a keystroke if the entire keystroke was not contained in a single
  string action (e.g., {left_ F(x)} didn't work before).

* Fixed a bug making ShiftKey not work.

* Fixed a bug where combining <_anything> and an optional word caused
  only the first word of the <_anything> to be returned.

* New samples file, _Dragon_help.vcl, showing how to use the HTMLHelp
  call to display help for Vocola calls using Dragon NaturallySpeaking
  professional/legal/medical.

* Fixed a bug where if the first error in a Vocola file was an undefined
  variable reference, then the (base) file name containing the error(s)
  was not displayed.


* Python 2.6 is now supported.
* Python 2.7 is now (probably) supported


New in the combined NatLink/Vocola/Unimacro installer:
* User configuration is now done through configuration file "natlinkstatus.ini"
in the Core directory instead of the User section of the registry.
* New in the combined NatLink/Vocola/Unimacro installer:

New in Unimacro:

* Unimacro grammars: _keystrokes revised
* Unimacro added shorthand command SCLIP, sending keys via the clipboard
* added _latex grammar (Frank)
* added spokenforms module, for numbers lists spoken forms only, also for characters, extensions etc.
  must be developed further, but the framework is there (also see unittestSpokenForms.py)
* extended _folders grammar
* added _shownumbersplus grammar
* improved introspection methods (show ..., show active grammars, ...)
* Changed child behaves like top (_folders grammar) towards actions
* Introduce top behaves like child (killWindow or KW actions)
* Added chrome/google chrome to possible browsers (grammar _general)
* Added a mechanism for spoken forms lists for numbers lists
* Added Unimacro Shorthand Command AC (doActionConditionally), checking for a window with a title.
* making spoken forms for number lists and number grammars.
* DocstringGrammar included (on top of IniGrammar), making rules definition in docstrings possible.
* monitorfunctions.py for switching tasks across monitors and moving resizing windows (tasks)
* _tasks.py: revised, for use with monitorfunctions
* Included new Unimacro Shorthand Commands: TASKOD, TASKMAX, TASKMIN, TASKRESTORE
* Excluded windkey.dll. Sending the windows key now goes through api calls. So changed the Unimacro Shorthand Command WINKEY.
* enhanced DATE and added TIME actions (can also speak (ttsplaystring))

Changed in NatLink (for programmers only):
*** with Dragon 11:
  * unittestNatlink is now made ready for Dragon 11.
  * Changed written\category\spoken forms of vocabulary entries (see testWordFuncs function in unittestNatlink.py)
  * getWordInfo does not work any more, only use for word existence
  * setWordInfo does not work any more
  * changed behaviour in dictObj, more testing should be done to clarify things
  * dgnwords imported no longer works, see testDgndictationEtc in unittestNatlink
  *
* callIfExists returns the return value of the calling function, so can be used with methods that need this return value also. 
* added deactivateSet() function in GrammarBase
* added exceptlist optional variable to activateAll method of GrammarBase
* added callRuleResultsFunctions in resultsCallback, so the calling of the rule result functions can be overloaded (for DocstringGrammar)
* natlinkmain.py (QH): loading (in findAndLoadFiles) _control.py last, the Unimacro control grammar (for introspection)
* added a "flush" method to NewStdout and NewStderr in natlinkmain.py (python 2.6 wanted them appearently) (QH)
* added a variable self.self.doOnlyGotResultsObject, which can make the resultsCallback skip the
  gotResults_... and gotResults functions
  
  

